/auth/sign-up:
  post:
    description: 회원가입
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              email:
                type: string
              password:
                type: string
              nickname:
                type: string
              address:
                type: string
              birthDay:
                type: string
    responses:
      '200':
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      '400':
        $ref: '#/components/res/400'
      '500':
        $ref: '#/components/res/500'


# /auth/sign-in:
#   post:
#     description: 로그인
#     requestBody:
#       requied: true
#       content:
#         application/x-www-form-urlencoded:
#           schema:
#             type: object
#           propertise:
#             email:
#               type: string
#             password:
#               type: string
#     responses:
#       200:
#         description: 성공
          # content:
          #   application/json:
      #         schema:
      #           type: object
      #           properties:
      #             message:
      #               type: string
      #             data:
      #               type: string
#       400:
#         $ref: '#/components/res/400'
#       500:
#         $ref: '#/components/res/500'


# /auth/jwt-verify:
#   post: # need jwt
#     description: JWT 토큰 검증
#     security:
#       - BearerAuth: []
#     responses:
#       200:
#         description: 성공
#           schema:
#             type: object
#             properties:
#               message:
#                 type: string
#       401:
#         $ref: '#/components/res/401'
#       500:
#         $ref: '#/components/res/500'
/boards:
  get:
    summary: board 컬렉션 가져오기
    parameters:
      - name: searchString
        in: query
        description: 검색을 위한 문자열
        schema:
          type: string
      - name: sortKey
        in: query
        description: 정렬을 위한 키
        schema:
          type: integer
          minimum: 1
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: ../definitions/Board.yaml
      500:
        $ref: '#/components/res/500.yaml'
  
  post: # need jwt
    summary: board 도큐먼트 추가
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              title:
                type: string
              body:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      500:
        $ref: '#/components/res/500.yaml'


/boards/{id}:
  get:
    summary: board 도큐먼트 가져오기
    parameters:
      - name: id
        in: path
        required: true
        description: 가져올 board id.
        schema:
          type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  $ref: ../definitions/Board.yaml
      400:
        $ref: '#/components/res/400.yaml'
      404:
        $ref: '#/components/res/404.yaml'
      500:
        $ref: '#/components/res/500.yaml'

  patch: # need jwt
    summary: board 도큐먼트 수정
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: 수정할 board id.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              title:
                type: string
              body:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      404:
        $ref: '#/components/res/404.yaml'
      500:
        $ref: '#/components/res/500.yaml'

  delete: # need jwt
    summary: board 도큐먼트 삭제
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: 삭제할 board id
        schema:
          type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      404:
        $ref: '#/components/res/404.yaml'
      500:
        $ref: '#/components/res/500.yaml'

/boards/analysis:
  get:
    summary: board 통계 가져오기
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      boardCnt:
                        type: integer
                      likeCnt:
                        type: integer
                      username:
                        type: string
      500:
        $ref: '#/components/res/500.yaml'


/boards/{id}/like: # need jwt
  post:
    summary: board 좋아요
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: 좋아요 누를 board id.
        schema:
          type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      # 여기에 404
      500:
        $ref: '#/components/res/500.yaml'


/boards/{id}/like/cancel: # need jwt
  delete:
    summary: board 좋아요 취소
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: 좋아요 취소할 board id.
        schema:
          type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      500:
        $ref: '#/components/res/500.yaml'


/boards/{id}/report: # need jwt
  post:
    summary: board 신고
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: 신고할 board id.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              code:
                type: integer
                minimum: 1
              value:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      # 여기에 404
      500:
        $ref: '#/components/res/500.yaml'


/boards/{id}/comment: # need jwt
  post:
    summary: board 댓글 추가
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: 댓글을 작성할 board id.
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              value:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      500:
        $ref: '#/components/res/500.yaml'


/boards/{boardId}/comment/{commentId}:
  patch: # need jwt
    summary: board 댓글 수정
    security:
      - BearerAuth: []
    parameters:
      - name: boardId
        in: path
        required: true
        description: 댓글이 달려있는 board id
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        description: 수정할 댓글의 comment id
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              value:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      500:
        $ref: '#/components/res/500.yaml'

  delete: # need jwt
    summary: board 댓글 삭제
    security:
      - BearerAuth: []
    parameters:
      - name: boardId
        in: path
        required: true
        description: 댓글이 달려있는 board id
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        description: 삭제할 댓글의 comment id
        schema:
          type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      500:
        $ref: '#/components/res/500.yaml'


/boards/{boardId}/comment/{commentId}/report:
  post: # need jwt
    summary: board 댓글 신고
    security:
      - BearerAuth: []
    parameters:
      - name: boardId
        in: path
        required: true
        description: 댓글이 달려있는 board id
        schema:
          type: string
      - name: commentId
        in: path
        required: true
        description: 신고할 댓글의 comment id
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              code:
                type: integer
                minimum: 1
              value:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: '#/components/res/400.yaml'
      401:
        $ref: '#/components/res/401.yaml'
      500:
        $ref: '#/components/res/500.yaml'
/files:
  get:
    summary: file 컬렉션 가져오기
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: ../definitions/File.yaml
      500:
        $ref: #/components/res/500.yaml


/files/download/{id}:
  get:
    summary: file 도큐먼트 가져오기
    parameters:
      - name: id
        in: path
        required: true
        description: 가져올 file id
        schema:
          type: string
    responses:
      200:
        description: 성공
      400:
        $ref: #/components/res/400.yaml
      500:
        $ref: #/components/res/500.yaml


/files/upload: # nedd jwt
  post:
    summary: file 도큐먼트 추가
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            propertise:
              newFile:
                type: string
                format: binary
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: #/components/res/400.yaml
      401:
        $ref: #/components/res/401.yaml
      500:
        $ref: #/components/res/500.yaml
/fonts:
  get:
    summary: font 컬렉션 가져오기
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  type: array
                  items:
                    $ref: ../definitions/Font.yaml
      500:
        $ref: #/components/res/500.yaml

/fonts/upload:
  post:
    summary: font 도큐먼트 추가
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            propertise:
              newFile:
                type: string
                format: binary
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: #/components/res/400.yaml
      401:
        $ref: #/components/res/401.yaml
      500:
        $ref: #/components/res/500.yaml
/users/find-password:
  post:
    summary: 비밀번호 찾기(이메일 제출)
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              email:
                type: string
                format: email
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                data:
                  type: string
      400:
        $ref: #/components/res/400.yaml
      500:
        $ref: #/components/res/500.yaml

/users/password:
  patch: # need jwt
    summary: 회원의 password 변경
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              oldPwd:
                type: string
                format: password
              newPwd:
                type: string
                format: password
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: #/components/res/400.yaml
      401:
        $ref: #/components/res/401.yaml
      500:
        $ref: #/components/res/500.yaml

/users/nickname:
  patch: # need jwt
    summary: 회원의 nickname 변경
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              nickname:
                type: string
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: #/components/res/400.yaml
      401:
        $ref: #/components/res/401.yaml
      500:
        $ref: #/components/res/500.yaml

/users/info:
  patch: # need jwt
    summary: 회원정보 변경
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            propertise:
              address:
                type: string
              birthDay:
                type: string
                format: date
    responses:
      200:
        description: 성공
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      400:
        $ref: #/components/res/400.yaml
      401:
        $ref: #/components/res/401.yaml
      500:
        $ref: #/components/res/500.yaml
